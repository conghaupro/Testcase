<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button15.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAACc1JREFUaEOtWHm0jtUaP4fEKq1Iqpt1s8qQVKLS5Joa1jJEEcpqOJm5h4gSrg7H
        mMRBEuIgmTnIdMwWrYZlONaKZFjkrvjDxV3m2W7/Ht9v97z7e7/v/aTfWvt73r33s5/n+b3PfvfwpRmL
        y5cvQwTk1atXzZUrV+JkWJuWYbaSyUuXLiWVqdpJ48P58+dFXrhwQQLy5cWLFyVYSjjCWF/6bXoMJG3R
        Nn0CjCFK6nGwAz+SkUQKlDoAktBkdNF9lL4N+tAyKnhf6hiByIzcCAk9Vtukc19GBa9jpIQ9+JOMhBnW
        ASQiQamfqcMxiUikGrQv/RhZl4zoBipEkdBF94WR0GToA/grwVNqu/CbRgda6gCiSKD4Or4NOtcyVRKU
        enyY/TQ4R4NWQBtlMhK6j2O0Ez94X0YFT+hx2j5jRCyBjPgKUSQoaSwZYBOICp7yqi3fbdokzwDs+7Hy
        5QEuI8lIQKaCY8eOmS2bN5s5s2ebwQMHmratW5vqjz9uhg8bFtO4hkgSNg7YSktLk5LVt6+0E36MICkZ
        8UmE4eTJk2brli0mb8ECM3TwYNOpfXtTt1YtU65sWecwqnw+ZkzMWvT0yl+xQsYUVuMzO3YMZJ5kELtk
        BEWTGDF8uKlds6ap8MADzkiyAmcoRQqli7y5UKE4qfXHjB4tfgifBDA6J0d0b7KlSHq6KaTGN33lFfP/
        48dFD8QkIyShUf+ll9wgGKCxVGQYCS1RaHvc2LExj39+Q8xUxttvi45vH4XjJ44fL7qSEfwAmDJfT5sm
        z8CH3buLsjaSSEYFHyYZDMpYNeWIJ6tVS+offevWrhVdlxEgb/586QSZX3buNN27dRNFtKV7RgIyyXRK
        RaLAB8r4ceMkFoBt8BHmF32nTp0S3UBGAA6e8c03ptqjj5plS5eaEydOuHbfWKrBpiLpA2XihAkST7cu
        XVwb9OgXz2gDkA0kQzKCLx+464473ECQmTNrljgB/nnvvdLuyNhM/N1kIPVHvTBvgfjG8ss2+IesWK6c
        9IGIywgqQId27QLKkyZONM/Xri3PQItmzVx/KkFdj9QvB/YxneELZd7cueK/Q9u2ru11GwvAvUQyQiKL
        Fy4UJRrD85rVq93gg7/9Zqbk5jqdVINMRcIf/UKi0C9K5QcfNAf273f1USNHSsxuaiEjnFoAlGgMz/2z
        Pjbz581zBqZNnWoOHz7s6qkEGSVpyy/Yx5o0bmy+sMv07l9/NWvXrHF9GzdskHhdRsAIhWTuLFFCFJmR
        ErfdJu0//fijM4I1HkAgqKcSbJH0YJC6VCpf3rRt1UpWrR0//yxz/syZM7JqHjlyxNSqUcO8UKeO+Mzs
        1EnG7N69W+ogIURQAQlOr1bvvCOKTDOeT58+LX36/PNQhYrS9pQ9S6HOoPXc9gtWwvZt2pipuVPMrl27
        ZCeH7fz8FWbIoEGmYb165s6SJQNjJk+aJPJfzz4r/tavWyf1VStXSp3Hq7iMLFuy1BnhCpI7ebL0EaVu
        v931A7169nRjUJ6oWtV0ycw0M6ZPN3v37DEXbMCHfv/dLF2yxPT+6CPzYt26pnixYoExYQV+ttjzHZ5f
        rl9ffO3bt0/qOJgCgYzocxaYQnFlfr4zyLRqoA19VSpXNgUFBS5rwLQpU2RDrfHM04HlNFGpVqWKaW9X
        pKl2IcEKhVPGdLsxI6b7ypQRndYZ75qudl/5sEcPqY/87DPxFcgIBvCsM2bUKFEE8IHRGYANEtkZmJ0t
        Ke7Tq5d5uFIl06xJE6c30+4/fPYL9qJmTZuaT+2x/mu7aHxll/dBAwaYdna6PfbII3H6Bdu2uece779v
        Mt56y9X79ukjMXH7iMtIR3s8hyLeDM5AZe65R+qz7eZIIyzDhg41x+0p9M2WLV3biuXLTSm7YDR/7TXp
        x0oDHR/QLX///fIyOJYH1JtiC8PevXtdH/Tq2BM5660yMsQOL1pxGXmhTm1zV6lSkkIsu1yGkW5IvRrR
        QdfOnZ2DTRs3ih0fnAI4EPHY08KSJfr27i1tsE1bO3fscM/wg5VzR6ytccOGMi4uI2gASttjyjPVq8vy
        tnjRImcIcxZSL6moP1SxoqSZepvtDRGAvbArNLB9+3bR7Z+VJXX6/uH776UdC8XRo0eljXZ7fvCB1AHU
        cfMEeOyP+zsISlirkRHWy9oPLrtfljyTBDNVwU4P3BjxjFJQsE3GhZHg9F29apXo4uUAiAFYlJcn7bNm
        zpQ6QLu4OhNY4u+z3xvhMkISAAZNsBeWooULmzUxh1guGzVo4IyylLn7btPGbmRwwrY9sY2KL0eTYEZw
        IYLutq1bpU4iPP5wjwBo9xP7vREggRcJ8FaZhv0DzoDDhw7JIMzzW4oWFYl6yxYt7Ek0z3y7eLGsZD70
        6XS/PQ8BOhOQPEoAA/r3F93TsfsEiWBnRzumGEG7+q6CnR5tBGwHMsIDIi5WWIYROOqdM/8t/QQ3T76N
        AdnXAkP5nz1SADoTJMFx2DMYCEiQ4CdDhkj7gQMHpA7QLpZqAnd2jnefBI0DE778UhTOnj0rdRLLGTFC
        6kDYHwU59iRKh8xYGAkEzbd/7tw5kagzBnz8sMEPHaDduXPmxFqMLPFoIzBeagwKu7FWwEkXdd4HfBJ8
        G/hXhA5xDAEQvCbDgJkBZIxtqAPdur7n/JMwV8cF9ioO6BcIsB7ISK3nnnOGAP4ls90eQQgGTwngaAE9
        FIwBGKCWCE4X3QfgvzLtH+B+hY2V8F8oxgcykt2vn3mjeXN5Bvr0vrbr4igNUM8ngz8sSCQ3d7I7YjNQ
        n4BPkIvNq40aOSK0fWuxogEiPglKlxE2aHTq0MEZxjQBNAkGsCh2s0SZOWOGmR+bij4B+KIECU492h49
        KsdUtUd9DZwyYPe/Bw86fz4J2AtkxJdNX/1zdQB8Eqwvia1uKMuXLTP/sccNgIFHkdC2CL+eiARlXEYo
        gZr2mylRvLg8+yQYALBh/XpHBP/Z8k9nktBkOJ00CZ8MJWPx676EvaQZ+Ufp0nJvJnwSkIAmQmgCOnhI
        30YyEqnKpBnBvQP/bQFhJBAYcDx2BS4Zu98nygBlFInrJQO7STNCJCKhyfDvS01Ck9FjGHwYiUSxREk5
        /QJs8A1rh2EkGDBAEiwkocnQxo2Q8MfBfmhGfEU/AD9An4Du+7tJUPrjQzNCR9oxpB+gTwDF1/Ft0DZ9
        aRkVvI6REvbgJ5ARXyGKBKV+pg7H6ODDSEQFnUj69lxGtAPtWAeUiAQLSWgytHEjJPxxjI0S/uS/X1/R
        D8AP0Ceg+5KR0L5SJUGZLEYgcGdnBwPxA4QupX7WOqmQoPwrJLRdHaN8I3hIJkk2kYSxsJJoDBDl8/qk
        MX8AH9trtol1kL4AAAAASUVORK5CYII=
</value>
  </data>
</root>